//Problem 5.30 main
#include <iostream>
#include <iomanip>
#include <string>
#include "DollarAmount.h"
using namespace std;

int main() {
   DollarAmount d1{123,45}; // $123.45
   DollarAmount d2{1576}; // $15.76

   cout << "After adding d2 (" << d2.toString() << ") into d1 ("
      << d1.toString() << "), d1 = ";
   d1.add(d2); // modifies object d1
   cout << d1.toString() << "\n";

   cout << "After subtracting d2 (" << d2.toString() << ") from d1 ("
      << d1.toString() << "), d1 = ";
   d1.subtract(d2); // modifies object d1
   cout << d1.toString() << "\n";

   cout << "After subtracting d1 (" << d1.toString() << ") from d2 ("
      << d2.toString() << "), d2 = ";
   d2.subtract(d1); // modifies object d2
   cout << d2.toString() << "\n\n";

   cout << "Enter integer interest rate and divisor. For example:\n"
      << "for     2%, enter:    2 100\n"
      << "for   2.3%, enter:   23 1000\n"
      << "for  2.37%, enter:  237 10000\n"
      << "for 2.375%, enter: 2375 100000\n> ";
   int rate; // whole-number interest rate
   int divisor; // divisor for rate
   cin >> rate >> divisor;

   DollarAmount balance{100000}; // initial principal amount in pennies
   cout << "\nInitial balance: " << balance.toString() << endl;

   // display headers
   cout << "\nYear" << setw(20) << "Amount on deposit" << endl;

   // calculate amount on deposit for each of ten years
   for (unsigned int year{1}; year <= 10; year++) {
      // increase balance by rate % (i.e., rate / divisor)
      balance.addInterest(rate, divisor);

      // display the year and the amount
      cout << setw(4) << year << setw(20) << balance.toString() << endl;
   }
}

//problem 5.30 class
#include <string>
#include <cmath>
#include <sstream>
class DollarAmount {
public:
   // initialize amount from an int64_t value
   explicit DollarAmount(int64_t value) : amount{value} { }

   explicit DollarAmount(int64_t dollars, int64_t cents) : amount{dollars*100+cents} {}
   // add right's amount to this object's amount
   void add(DollarAmount right) {
      // can access private data of other objects of the same class
      amount += right.amount;
   }
    cout<<"d1 after being divided by 2 is: ";
   d1.divide(2);
   cout << d1.toString() << "\n";
   
   // subtract right's amount from this object's amount
   void subtract(DollarAmount right) {
      // can access private data of other objects of the same class
      amount -= right.amount;
   }
   // uses integer arithmetic to calculate interest amount,
   // then calls add with the interest amount
   void addInterest(int rate, int divisor) {
      DollarAmount interest{
         (amount * rate + divisor / 2) / divisor
      };
      add(interest);
   }

   std::string toTheString(int i){
    std::stringstream ss;
    ss << i;
    std::string s=ss.str();
    return s;
    }

   const std::string toString() {
      std::string dollars{toTheString(amount / 100)};
      std::string cents{toTheString(std::abs(amount % 100))};
      return dollars + "." + (cents.size() == 1 ? "0" : "") + cents;
   }
private:
   int64_t amount{0}; // dollar amount in pennies
};

//5.31 main
#include <iostream>
#include <iomanip>
#include <string>
#include "DollarAmount.h"
using namespace std;

int main() {
   DollarAmount d1{123,45}; // $123.45
   DollarAmount d2{15,76}; // $15.76

   cout << "After adding d2 (" << d2.toString() << ") into d1 ("
      << d1.toString() << "), d1 = ";
   d1.add(d2); // modifies object d1
   cout << d1.toString() << "\n";

   cout << "After subtracting d2 (" << d2.toString() << ") from d1 ("
      << d1.toString() << "), d1 = ";
   d1.subtract(d2); // modifies object d1
   cout << d1.toString() << "\n";

   cout << "After subtracting d1 (" << d1.toString() << ") from d2 ("
      << d2.toString() << "), d2 = ";
   d2.subtract(d1); // modifies object d2
   cout << d2.toString() << "\n\n";

   cout << "Enter integer interest rate and divisor. For example:\n"
      << "for     2%, enter:    2 100\n"
      << "for   2.3%, enter:   23 1000\n"
      << "for  2.37%, enter:  237 10000\n"
      << "for 2.375%, enter: 2375 100000\n> ";
   int rate; // whole-number interest rate
   int divisor; // divisor for rate
   cin >> rate >> divisor;

   DollarAmount balance{100000}; // initial principal amount in pennies
   cout << "\nInitial balance: " << balance.toString() << endl;

   // display headers
   cout << "\nYear" << setw(20) << "Amount on deposit" << endl;

   // calculate amount on deposit for each of ten years
   for (unsigned int year{1}; year <= 10; year++) {
      // increase balance by rate % (i.e., rate / divisor)
      balance.addInterest(rate, divisor);

      // display the year and the amount
      cout << setw(4) << year << setw(20) << balance.toString() << endl;
   }
}

//problem 5.31 class
#include <string>
#include <cmath>
#include <sstream>
class DollarAmount {
public:
   // initialize amount from an int64_t value
   explicit DollarAmount(int64_t value) : amount{value} { }

   explicit DollarAmount(int64_t dollars, int64_t cents) : amount{dollars*100+cents} {}
   // add right's amount to this object's amount
   void add(DollarAmount right) {
      // can access private data of other objects of the same class
      amount += right.amount;
   }

   // subtract right's amount from this object's amount
   void subtract(DollarAmount right) {
      // can access private data of other objects of the same class
      amount -= right.amount;
   }
   
   void divide (int d) {
       int temp=dollars*100+cents;
       temp=temp / d;
       dollars = temp/100;
       cents=temp%100;
        } 
   
   // uses integer arithmetic to calculate interest amount,
   // then calls add with the interest amount
   void addInterest(int rate, int divisor) {
      DollarAmount interest{
         (amount * rate + divisor / 2) / divisor
      };
      add(interest);
   }

   std::string toTheString(int i){
    std::stringstream ss;
    ss << i;
    std::string s=ss.str();
    return s;
    }

   const std::string toString() {
      std::string dollars{toTheString(amount / 100)};
      std::string cents{toTheString(std::abs(amount % 100))};
      return dollars + "." + (cents.size() == 1 ? "0" : "") + cents;
   }
private:
   int64_t amount{0}; // dollar amount in pennies
};

//5.32 main
#include <iostream>
#include <iomanip>
#include <string>
#include "DollarAmount.h"
using namespace std;

int main() {
   DollarAmount d1{123,45}; // $123.45
   DollarAmount d2{15,76}; // $15.76

   cout << "After adding d2 (" << d2.toString() << ") into d1 ("
      << d1.toString() << "), d1 = ";
   d1.add(d2); // modifies object d1
   cout << d1.toString() << "\n";

  cout<<"d1 after being divided by 2 is: ";
   d1.divide(2);
   cout << d1.toString() << "\n";
   
   cout << "After subtracting d2 (" << d2.toString() << ") from d1 ("
      << d1.toString() << "), d1 = ";
   d1.subtract(d2); // modifies object d1
   cout << d1.toString() << "\n";

   cout << "After subtracting d1 (" << d1.toString() << ") from d2 ("
      << d2.toString() << "), d2 = ";
   d2.subtract(d1); // modifies object d2
   cout << d2.toString() << "\n\n";

   cout << "Enter integer interest rate and divisor. For example:\n"
      << "for     2%, enter:    2 100\n"
      << "for   2.3%, enter:   23 1000\n"
      << "for  2.37%, enter:  237 10000\n"
      << "for 2.375%, enter: 2375 100000\n> ";
   int rate; // whole-number interest rate
   int divisor; // divisor for rate
   cin >> rate >> divisor;

   DollarAmount balance{100000}; // initial principal amount in pennies
   cout << "\nInitial balance: " << balance.toString() << endl;

   // display headers
   cout << "\nYear" << setw(20) << "Amount on deposit" << endl;

   // calculate amount on deposit for each of ten years
   for (unsigned int year{1}; year <= 10; year++) {
      // increase balance by rate % (i.e., rate / divisor)
      balance.addInterest(rate, divisor);

      // display the year and the amount
      cout << setw(4) << year << setw(20) << balance.toString() << endl;
   }
}

//problem 5.32 class
#include <string>
#include <cmath>
#include <sstream>
class DollarAmount {
public:
   // initialize amount from an int64_t value
   explicit DollarAmount(int64_t value) : amount{value} { }

   explicit DollarAmount(int64_t dollars, int64_t cents) : amount{dollars*100+cents} {}
   // add right's amount to this object's amount
   void add(DollarAmount right) {
      // can access private data of other objects of the same class
      amount += right.amount;
   }

   // subtract right's amount from this object's amount
   void subtract(DollarAmount right) {
      // can access private data of other objects of the same class
      amount -= right.amount;
   }
      void divide (int d) {
       int temp=dollars*100+cents;
       temp=temp / d;
       dollars = temp/100;
       cents=temp%100;
        }

     void addInterest(int rate, int divisor) {
              int placeholder;
        if((((amount * rate)/1000)%2==0)&&(((amount * rate)%100)/10==50)){
         placeholder = (amount * rate) / divisor;
          }
        else{
            placeholder = (amount * rate + divisor / 2)/divisor;
        }
        int64_t dollarsTwo=placeholder/100;
        int64_t centsTwo=placeholder%100;
      DollarAmount interest{dollarsTwo,centsTwo};
      add(interest);
     }

   std::string toTheString(int i){
    std::stringstream ss;
    ss << i;
    std::string s=ss.str();
    return s;
    }

   const std::string toString() {
      std::string dollars{toTheString(amount / 100)};
      std::string cents{toTheString(std::abs(amount % 100))};
      return dollars + "." + (cents.size() == 1 ? "0" : "") + cents;
   }
private:
   int64_t amount{0}; // dollar amount in pennies
};

//5.33 main
#include <iostream>
#include <iomanip>
#include <string>
#include "DollarAmount.h"
using namespace std;

int main() {
   DollarAmount d1{123,45}; // $123.45
   DollarAmount d2{15,76}; // $15.76

   cout << "After adding d2 (" << d2.toString() << ") into d1 ("
      << d1.toString() << "), d1 = ";
   d1.add(d2); // modifies object d1
   cout << d1.toString() << "\n";

   cout<<"d1 after being divided by 2 is: ";
   d1.divide(2);
   cout << d1.toString() << "\n";

   cout << "After subtracting d2 (" << d2.toString() << ") from d1 ("
      << d1.toString() << "), d1 = ";
   d1.subtract(d2); // modifies object d1
   cout << d1.toString() << "\n";

   cout << "After subtracting d1 (" << d1.toString() << ") from d2 ("
      << d2.toString() << "), d2 = ";
   d2.subtract(d1); // modifies object d2
   cout << d2.toString() << "\n\n";

   cout << "Enter integer interest rate and divisor. For example:\n"
      << "for     2%, enter:    2 100\n"
      << "for   2.3%, enter:   23 1000\n"
      << "for  2.37%, enter:  237 10000\n"
      << "for 2.375%, enter: 2375 100000\n> ";
   int rate; // whole-number interest rate
   int divisor; // divisor for rate
   cin >> rate >> divisor;

   DollarAmount balance{1000,0}; // initial principal amount in pennies
   cout << "\nInitial balance: " << balance.toString() << endl;

   // display headers
   cout << "\nYear" << setw(20) << "Amount on deposit" << endl;

   // calculate amount on deposit for each of ten years
   for (unsigned int year{1}; year <= 10; year++) {
      // increase balance by rate % (i.e., rate / divisor)
      balance.addInterest(rate, divisor);

      // display the year and the amount
      cout << setw(4) << year << setw(20) << balance.toString() << endl;
   }
}
//5.33 class
#include <string>
#include <cmath>
#include <sstream>
class DollarAmount {
public:
   // initialize amount from an int64_t value
   explicit DollarAmount(int64_t dollarsAmount, int64_t centsAmount)
   : dollars{dollarsAmount}, cents{centsAmount} {
   }
   // add right's amount to this object's amount
   void add(DollarAmount right) {
      // can access private data of other objects of the same class
      dollars += right.dollars;
      cents += right.cents;
   }

   // subtract right's amount from this object's amount
   void subtract(DollarAmount right) {
      // can access private data of other objects of the same class
      dollars -= right.dollars;
      cents -= right.cents;
   }

   void divide (int d) {
       int temp=dollars*100+cents;
       temp=temp / d;
       dollars = temp/100;
       cents=temp%100;
        }
   // uses integer arithmetic to calculate interest amount,
   // then calls add with the interest amount
   void addInterest(int rate, int divisor) {
              int placeholder;
        int amount=dollars*100+cents;
        if((((amount * rate)/1000)%2==0)&&(((amount * rate)%100)/10==50)){
         placeholder = (amount * rate) / divisor;
          }
        else{
            placeholder = (amount * rate + divisor / 2)/divisor;
        }
        int64_t dollarsTwo=placeholder/100;
        int64_t centsTwo=placeholder%100;
      DollarAmount interest{dollarsTwo,centsTwo};
      add(interest); // add interest to this object's amount
   }
    std::string toTheString(int i){
    std::stringstream ss;
    ss << i;
    std::string s=ss.str();
    return s;
    }

   const std::string toString() {
    int amount = dollars*100+cents;
      std::string stringDollars{toTheString(amount / 100)};
      std::string stringCents{toTheString(std::abs(amount % 100))};
      return stringDollars + "." + (stringCents.size() == 1 ? "0" : "") + stringCents;
   }

private:
   int64_t dollars{0};
   int64_t cents{0}; // dollar amount in pennies
};

// 5.34 main
#include <iostream>
#include "Account.h"

using namespace std;

int main()
{
   Account account1{"Jane Green", {50,10}};
   Account account2{"John Blue", {7,20}};

   // display initial balance of each object
   cout << "account1: " << account1.getName() << " balance is $"
      << account1.getBalance();
   cout << "\naccount2: " << account2.getName() << " balance is $"
      << account2.getBalance();

   cout << "\n\nEnter deposit amount dollars, follwed by deposit amount cents, for account1: "; // prompt
   int d1;
   int c1;
   cin >>d1>>c1;
   DollarAmount depositAmount{d1,c1}; // obtain user input
   cout << "adding " << depositAmount.toString() << " to account1 balance";
   account1.deposit(depositAmount); // add to account1's balance

   // display balances
   cout << "\n\naccount1: " << account1.getName() << " balance is $"
      << account1.getBalance();
   cout << "\naccount2: " << account2.getName() << " balance is $"
      << account2.getBalance();

   cout << "\n\nEnter deposit amount dollars, followed by deposit amount cents, for account2: "; // prompt
   int d2;
   int c2;
   cin >>d2>>c2;
   DollarAmount depositAmount2{d2,c2}; // obtain user input
   cout << "adding " << depositAmount2.toString() << " to account2 balance";
   account2.deposit(depositAmount); // add to account2 balance

   // display balances
   cout << "\n\naccount1: " << account1.getName() << " balance is $"
      << account1.getBalance();
   cout << "\naccount2: " << account2.getName() << " balance is $"
      << account2.getBalance() << endl;
}

//5.34 classes
#include <string>
#include <cmath>
#include <sstream>
class DollarAmount {
public:
   // initialize amount from an int64_t value
   DollarAmount(int64_t dollarsAmount, int64_t centsAmount)
   : dollars{dollarsAmount}, cents{centsAmount} {
   }
   // add right's amount to this object's amount
   void add(DollarAmount right) {
      // can access private data of other objects of the same class
      dollars += right.dollars;
      cents += right.cents;
   }

   // subtract right's amount from this object's amount
   void subtract(DollarAmount right) {
      // can access private data of other objects of the same class
      dollars -= right.dollars;
      cents -= right.cents;
   }

   void divide (int d) {
       int temp=dollars*100+cents;
       temp=temp / d;
       dollars = temp/100;
       cents=temp%100;
        }
   // uses integer arithmetic to calculate interest amount,
   // then calls add with the interest amount
   void addInterest(int rate, int divisor) {
              int placeholder;
        int amount=dollars*100+cents;
        if((((amount * rate)/1000)%2==0)&&(((amount * rate)%100)/10==50)){
         placeholder = (amount * rate) / divisor;
          }
        else{
            placeholder = (amount * rate + divisor / 2)/divisor;
        }
        int64_t dollarsTwo=placeholder/100;
        int64_t centsTwo=placeholder%100;
      DollarAmount interest{dollarsTwo,centsTwo};
      add(interest); // add interest to this object's amount
   }
    std::string toTheString(int i){
    std::stringstream ss;
    ss << i;
    std::string s = ss.str();
    return s;
    }

   const std::string toString() {
    int amount = dollars*100+cents;
      std::string stringDollars{toTheString(amount / 100)};
      std::string stringCents{toTheString(std::abs(amount % 100))};
      return stringDollars + "." + (stringCents.size() == 1 ? "0" : "") + stringCents;
   }

private:
   int64_t dollars{0};
   int64_t cents{0}; // dollar amount in pennies
};

class Account {
public:
   // Account constructor with two parameters
   Account(std::string accountName, DollarAmount initialBalance)
      : name{accountName}, balance{initialBalance}{ // assign accountName to data member na

      }

   // function that deposits (adds) only a valid amount to the balance
   void deposit(DollarAmount deposit){

            balance.add(deposit);
   }

   // function returns the account balance
   std::string getBalance() {
      return balance.toString();
   }

   // function that sets the name
   void setName(std::string accountName) {
      name = accountName;
   }

   // function that returns the name
   std::string getName() const {
      return name;
   }
private:
   std::string name; // account name data member
   DollarAmount balance{0,0}; // data member with default initial value
}; // end class Account



//Problem 5.35 main
#include <iostream>
#include <iomanip>
#include <string>
#include "DollarAmount.h"
using namespace std;

int main() {
   DollarAmount d1{12345}; // $123.45
   DollarAmount d2{1576}; // $15.76

   cout << "After adding d2 (" << d2.toString() << ") into d1 ("
      << d1.toString() << "), d1 = ";
   d1.add(d2); // modifies object d1
   cout << d1.toString() << "\n";

   cout << "After subtracting d2 (" << d2.toString() << ") from d1 ("
      << d1.toString() << "), d1 = ";
   d1.subtract(d2); // modifies object d1
   cout << d1.toString() << "\n";

   cout << "After subtracting d1 (" << d1.toString() << ") from d2 ("
      << d2.toString() << "), d2 = ";
   d2.subtract(d1); // modifies object d2
   cout << d2.toString() << "\n\n";

   cout << "Enter integer interest rate and divisor. For example:\n"
      << "for     2%, enter:    2 100\n"
      << "for   2.3%, enter:   23 1000\n"
      << "for  2.37%, enter:  237 10000\n"
      << "for 2.375%, enter: 2375 100000\n> ";
   int rate; // whole-number interest rate
   int divisor; // divisor for rate
   cin >> rate >> divisor;
   float rate2=rate;
   float divisor2=divisor;
   float percent = (100*rate2)/divisor2;
    cout << "You entered: " << percent << "%";
   DollarAmount balance{100000}; // initial principal amount in pennies
   cout << "\nInitial balance: " << balance.toString() << endl;

   // display headers
   cout << "\nYear" << setw(20) << "Amount on deposit" << endl;

   // calculate amount on deposit for each of ten years
   for (unsigned int year{1}; year <= 10; year++) {
      // increase balance by rate % (i.e., rate / divisor)
      balance.addInterest(rate, divisor);

      // display the year and the amount
      cout << setw(4) << year << setw(20) << balance.toString() << endl;
   }
}

// Problem 5.35 Class
#include <cmath>
#include <sstream>
class DollarAmount {
public:
   // initialize amount from an int64_t value
   explicit DollarAmount(int64_t value) : amount{value} { }

   // add right's amount to this object's amount
   void add(DollarAmount right) {
      // can access private data of other objects of the same class
      amount += right.amount;
   }

   // subtract right's amount from this object's amount
   void subtract(DollarAmount right) {
      // can access private data of other objects of the same class
      amount -= right.amount;
   }

   // uses integer arithmetic to calculate interest amount,
   // then calls add with the interest amount
   void addInterest(int rate, int divisor) {
      // create DollarAmount representing the interest
      DollarAmount interest{
         (amount * rate + divisor / 2) / divisor
      };

      add(interest); // add interest to this object's amount
   }

   // return a string representation of a DollarAmount object
   std::string toTheString(int i){
    std::stringstream ss;
    ss << i;
    std::string s=ss.str();
    return s;
    }
   // return a string representation of a DollarAmount object
   std::string toString() {
      std::string dollars{toTheString(amount / 100)};
      std::string cents{toTheString(std::abs(amount % 100))};
      return dollars + "." + (cents.size() == 1 ? "0" : "") + cents;
   }

private:
   int64_t amount{0}; // dollar amount in pennies
};
